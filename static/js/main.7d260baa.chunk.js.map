{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","props","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUserById","usersFromServer","find","todosWithUser","userId","App","useState","setTitle","setUserId","setTodos","isTitleValid","setIsTitleValid","isUserValid","setIsUserValid","action","method","onSubmit","event","preventDefault","maxId","Math","max","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d260baa.chunk.js","sourcesContent":["interface Props {\n  user: User;\n}\n\nexport const UserInfo = (props: Props) => {\n  const { user } = props;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const TodoInfo = (props: Props) => {\n  const { todo } = props;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo', {\n          'TodoInfo--completed': todo.completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: TodoWithUser[];\n}\n\nexport const TodoList = (props: Props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return <TodoInfo todo={todo} key={todo.id} />;\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUserById = (id: number) => (\n  usersFromServer.find(user => user.id === id) || null\n);\n\nconst getTodosWithUser = (todos: Todo[]) => {\n  return todos.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n};\n\nconst todosWithUser = getTodosWithUser(todosFromServer);\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(todosWithUser);\n\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const [isUserValid, setIsUserValid] = useState(true);\n\n  const clearInputs = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    if (!title) {\n      setIsTitleValid(false);\n    }\n\n    if (!userId) {\n      setIsUserValid(false);\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      {\n        id: maxId + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      },\n    ]);\n\n    clearInputs();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={\n              (event) => {\n                setTitle(event.target.value);\n                setIsTitleValid(true);\n              }\n            }\n          />\n          {!isTitleValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={\n              (event => {\n                setUserId(Number(event.target.value));\n                setIsUserValid(true);\n              })\n            }\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!isUserValid && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}